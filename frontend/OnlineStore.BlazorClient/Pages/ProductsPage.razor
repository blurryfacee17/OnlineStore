@page "/products"
@using OnlineStore.HttpApiClient
@using OnlineStore.BlazorClient.Components
@using OnlineStore.Domain.Entities
@using Blazored.Toast.Services
@using Blazored.Toast
@using OnlineStore.Models.Requests
@using OnlineStore.Models.Responses
@inherits OnlineStore.BlazorClient.Components.AppComponentBase

<h3>Список товаров</h3>

@* @inject IShopClient ShopClient; *@
@inject IToastService ToastService;

<div class="productsList">
    @if (_products is not null)
    {
        foreach (var product in _products.Products)
        {
            <ProductItem Product="product"/>
            <p>@product.ProductId</p>
            <button class="btn btn-success" id="btnAddToCart"  @onclick="@(() =>AddToCart(product.ProductId))">Добавить в корзину</button>
        }
    }
</div>

@code {

    private ProductsResponse? _products;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _products = await ShopClient.GetProducts();
    }

    private async Task AddToCart(Guid productId)
    {
        await ShopClient.AddToCart(productId);
        ToastService.ShowSuccess("I'm a SUCCESS message with a custom title", "Congratulations!");
    }
    
    // private async Task AddToCart(Product product)
    // {
    //     var cartItem = new CartItem();
    //     cartItem.ProductId = product.Id;
    //     cartItem.Price = product.Price;
    //     cartItem.Id = Guid.NewGuid();
    //     cartItem.Quantity = 1;
    //     await ShopClient.AddToCart(cartItem);
    //     ToastService.ShowSuccess("I'm a SUCCESS message with a custom title", "Congratulations!");
    // }

    // private async Task AddToCart()
    // {
    // var cartItem = new CartItem
    // {
    //     ProductId = Guid.NewGuid(),
    //     Price = 240m,
    //     Id = Guid.NewGuid(),
    //     Quantity = 1
    // };
    // await ShopClient.AddToCart(cartItem);
    // ToastService.ShowSuccess("I'm a SUCCESS message with a custom title", "Congratulations!");
    // }
}